name: CI/CD MLflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  EXPERIMENT_NAME: Telco_Customer_Churn_Model_Tunning
  CSV_URL: MLProject/dataset_preprocessing/telco-customer-churn_preprocessing.csv
  TARGET_VAR: Churn
  MLFLOW_TRACKING_URI: https://dagshub.com/rafifardhana1503/Membangun_model.mlflow/
  MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
  MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Check Env
      run: |
        echo $CSV_URL

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mlflow
        pip install python-dotenv

    - name: Run MLflow Project
      run: |
        mlflow run MLProject --env-manager=local --run-name rf_fixed_run

    - name: Get latest MLflow run_id
      run: |
        echo "Getting latest run ID..."
        python <<EOF
        import mlflow
        client = mlflow.tracking.MlflowClient()
        experiment = client.get_experiment_by_name("${{ env.EXPERIMENT_NAME }}")
        if experiment is None:
          raise Exception("Experiment not found.")
        runs = client.search_runs(experiment_ids=[experiment.experiment_id], order_by=["start_time DESC"])
        if not runs:
          raise Exception("No runs found in the experiment.")
        run_id = runs[0].info.run_id
        print(f"Latest run ID: {run_id}")
        with open("${GITHUB_ENV}", "a") as f:
          f.write(f"RUN_ID={run_id}\n")
        EOF

    - name: Install Python Dependencies
      run: |
        pip install -r MLProject/requirements.txt

    - name: Download Model Artifact from MLflow
      run: |
        mlflow artifacts download \
          --run-id $RUN_ID \
          --artifact-path rf_best_model \
          --dst-path downloaded_artifact

    - name: Upload Artifact to GitHub
      uses: actions/upload-artifact@v4
      with:
        name: rf_model_artifact
        path: downloaded_artifact/

    - name: Build Docker Model
      run: |
        mlflow models build-docker --model-uri "runs:/$RUN_ID/rf_best_model" --name "telco_customer_churn_model" --custom-setup-steps "RUN pip install mlflow==2.19.0"

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }} 

    - name: Tag Docker Image
      run: |
        docker tag telco_customer_churn_model ${{ secrets.DOCKER_USERNAME }}/telco_customer_churn_model:latest

    - name: Push Docker Image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/telco_customer_churn_model:latest